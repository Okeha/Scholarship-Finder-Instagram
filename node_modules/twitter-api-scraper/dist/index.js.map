{"version":3,"file":"index.js","sources":["../src/utils/getInitialOptions.ts","../src/utils/getApiClientInstance.ts","../src/utils/getGuestToken.ts","../src/utils/getBearerToken.ts","../src/utils/clientSearch.ts","../src/utils/parseSearch.ts","../src/utils/getHashflags.ts","../src/utils/getUser.ts","../src/TwitterClient.ts","../src/utils/getTweetsFromUser.ts","../src/types/searchResults.ts"],"sourcesContent":["export interface ClientRequiredOprionsInterface {\n  guestToken: string\n  bearerToken: string\n  maxRetries: number\n  log: boolean\n  userAgents: string[]\n}\n\nexport type ClientOptionsInterface = Partial<ClientRequiredOprionsInterface>\n\nexport const defaultUserAgents = [\n  'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:44.0) Gecko/20100101 Firefox/44.0',\n  'Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0',\n  'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:57.0) Gecko/20100101 Firefox/57.0',\n  'Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:63.0) Gecko/20100101 Firefox/63.0',\n  'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:73.0) Gecko/20100101 Firefox/73.0',\n  'Mozilla/5.0 (Windows NT 6.3; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0',\n  'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:90.0) Gecko/20100101 Firefox/90.0',\n  'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:72.0) Gecko/20100101 Firefox/72.0',\n  'Mozilla/5.0 (iPhone; CPU iPhone OS 11_6 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) FxiOS/37.0 Mobile/15E148 Safari/605.1.15',\n  'Mozilla/5.0 (iPad; CPU OS 11_6 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) FxiOS/37.0 Mobile/15E148 Safari/605.1.15'\n]\n\nconst defaultOptions: ClientRequiredOprionsInterface = {\n  guestToken: '',\n  bearerToken: '',\n  maxRetries: 3,\n  log: false,\n  userAgents: defaultUserAgents\n}\n\nexport const getInitialOptions = (\n  options: ClientOptionsInterface\n): ClientRequiredOprionsInterface => {\n  const finalOptions: ClientRequiredOprionsInterface = defaultOptions\n  Object.entries(finalOptions).forEach(([index, _value]) => {\n    if (typeof options[index] !== 'undefined') {\n      finalOptions[index] = options[index]\n    }\n  })\n  return finalOptions\n}\n","import axios, { AxiosInstance } from 'axios'\n\nexport const getApiClientInstance = (): AxiosInstance =>\n  axios.create({\n    headers: {\n      Host: 'twitter.com',\n      origin: 'https://twitter.com',\n      'User-Agent':\n        'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:80.0) Gecko/20100101 Firefox/80.0',\n      Accept: '*/*',\n      'Accept-Language': 'es-AR,es;q=0.8,en-US;q=0.5,en;q=0.3',\n      'Accept-Encoding': 'gzip, deflate',\n      'x-twitter-active-user': 'yes',\n      DNT: '1',\n      Connection: 'keep-alive',\n      Pragma: 'no-cache',\n      'Cache-Control': 'no-cache',\n      TE: 'Trailers',\n      'sec-fetch-dest': 'empty',\n      'sec-fetch-mode': 'cors',\n      'sec-fetch-site': 'same-site'\n    }\n  })\n","import axios from 'axios'\n\nexport const getGuestToken = async (): Promise<string | null> => {\n  const response = await axios.get<string>('https://mobile.twitter.com/', {\n    withCredentials: true,\n    headers: {\n      'User-agent':\n        'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:56.0) Gecko/20100101 Firefox/56.0',\n      Accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',\n      Host: 'mobile.twitter.com',\n      'Accept-Encoding': 'gzip, deflate',\n      DNT: '1',\n      Connection: 'keep-alive',\n      'Upgrade-Insecure-Requests': '1',\n      origin: 'https://mobile.twitter.com',\n      referer: 'https://mobile.twitter.com'\n    }\n  })\n  const tokenMatch = response.data.match(/decodeURIComponent\\(\"gt=([^;]+);/)\n  const token = tokenMatch ? tokenMatch[1] : null\n  return token\n}\n","import axios from 'axios'\n\nexport const getBearerToken = async (\n  userAgent: string\n): Promise<string | null> => {\n  const response = await axios.get<string>(\n    'https://abs.twimg.com/responsive-web/web/main.92eeeb04.js',\n    {\n      headers: {\n        'User-agent': userAgent\n      }\n    }\n  )\n  const tokenMatch = response.data.match(/s=\"(AAAAAA[^\"]+)\"/)\n  const token = tokenMatch ? tokenMatch[1] : null\n  return token\n}\n","import { AxiosInstance } from 'axios'\nimport { SearchResults } from '../types/searchResults'\n\nexport interface SearchQuery {\n  terms: string\n  dateFrom?: string\n  dateTo?: string\n  minReplies?: number\n  minRetweets?: number\n  minFaves?: number\n  lang?: string\n}\n\nconst buildSearchQueryString = (query: SearchQuery): string => {\n  let q = ''\n  if (query.terms !== undefined) {\n    q = query.terms\n  }\n  if (query.dateFrom !== undefined) {\n    q += ` since:${query.dateFrom}`\n  }\n  if (query.dateTo !== undefined) {\n    q += ` until:${query.dateTo}`\n  }\n  if (query.minReplies !== undefined) {\n    q += ` min_replies:${query.minReplies}`\n  }\n  if (query.minRetweets !== undefined) {\n    q += ` min_retweets:${query.minRetweets}`\n  }\n  if (query.minFaves !== undefined) {\n    q += ` min_faves:${query.minFaves}`\n  }\n  if (query.lang !== undefined) {\n    q += ` lang:${query.lang}`\n  }\n\n  return q\n}\n\nconst getSearchParams = (\n  query: SearchQuery,\n  maxTweets: number,\n  pageToken?: string\n) => {\n  const params: any = {\n    include_profile_interstitial_type: 1,\n    include_blocking: 1,\n    include_blocked_by: 1,\n    include_followed_by: 1,\n    include_want_retweets: 1,\n    include_mute_edge: 1,\n    include_can_dm: 1,\n    include_can_media_tag: 1,\n    skip_status: 1,\n    cards_platform: 'Web-12',\n    include_cards: 1,\n    include_ext_alt_text: true,\n    include_quote_count: true,\n    include_reply_count: 1,\n    tweet_mode: 'extended',\n    include_entities: true,\n    include_user_entities: true,\n    include_ext_media_color: true,\n    include_ext_media_availability: true,\n    send_error_codes: true,\n    simple_quoted_tweet: true,\n    q: buildSearchQueryString(query),\n    count: maxTweets,\n    query_source: 'typed_query',\n    pc: 1,\n    spelling_corrections: 1,\n    ext: 'mediaStats,highlightedLabel'\n  }\n  if (pageToken) {\n    params.cursor = pageToken\n  }\n  return params\n}\n\nconst getSearchHeaders = (query: SearchQuery, lang: string) => {\n  return {\n    Referer: 'https://twitter.com/search?q=' + query.terms + '&src=typed_query',\n    'x-twitter-client-language': lang\n  }\n}\n\nexport const clientSearch = async (\n  instance: AxiosInstance,\n  query: SearchQuery,\n  maxTweets: number,\n  pageToken?: string\n): Promise<SearchResults> => {\n  const searchParmas = getSearchParams(query, maxTweets, pageToken)\n  const queryUrl = 'https://twitter.com/i/api/2/search/adaptive.json'\n  const lang = query.lang || 'en'\n  const headers = getSearchHeaders(query, lang)\n  // Call api\n  const response = await instance.get<SearchResults>(queryUrl, {\n    params: searchParmas,\n    headers\n  })\n  return response.data\n}\n","import {\n  AddEntryInstruction,\n  Instruction,\n  SearchResults,\n  TweetValue,\n  UserValue\n} from '../types/searchResults'\n\nexport const getNextToken = (d: SearchResults): string | undefined => {\n  const instructions = d?.timeline?.instructions\n  if (!instructions?.length) {\n    return undefined\n  }\n  const lastInstruction: Instruction = instructions[instructions.length - 1]\n  if (lastInstruction.addEntries) {\n    return getTokenFromAddEntry(lastInstruction)\n  }\n  return undefined\n}\n\nconst getTokenFromAddEntry = (\n  entry: AddEntryInstruction\n): string | undefined => {\n  const entries = entry.addEntries.entries\n  const last = entries[entries.length - 1]\n  return last.content.operation?.cursor.value || undefined\n}\n\nexport interface ParsedSearchResult {\n  users: {\n    [key: string]: UserValue\n  }\n  tweets: {\n    [key: string]: TweetValue\n  }\n  nextToken: string | undefined\n}\n\nexport const parseSearch = (d: SearchResults): ParsedSearchResult => {\n  const result = {\n    users: d.globalObjects.users,\n    tweets: d.globalObjects.tweets,\n    nextToken: getNextToken(d)\n  }\n  return result\n}\n","import axios from 'axios'\n\nexport interface Hashflag {\n  campaignName: string\n  hashtag: string\n  assetUrl: string\n  startingTimestampMs: string\n  endingTimestampMs: string\n}\n\nexport const hashflagHeaders = {\n  Host: 'pbs.twimg.com',\n  Accept: '*/*',\n  'User-Agent':\n    'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:44.0) Gecko/20100101 Firefox/44.0',\n  'Accept-Language': 'en-US,en;q=0.5',\n  'Accept-Encoding': 'gzip, deflate, br',\n  Origin: 'https://mobile.twitter.com',\n  DNT: '1',\n  Connection: 'keep-alive',\n  Referer: 'https://mobile.twitter.com/',\n  'Sec-Fetch-Dest': 'empty',\n  'Sec-Fetch-Mode': 'cors',\n  'Sec-Fetch-Site': 'cross-site'\n}\n\nexport const getHashflags = async (date: string) => {\n  const { data } = await axios.get<Hashflag[]>(\n    `https://pbs.twimg.com/hashflag/config-${date}-01.json`,\n    { headers: hashflagHeaders }\n  )\n  return data\n}\n","import { AxiosInstance } from 'axios'\nimport { UserFromId } from '../types/userFromIdInterface'\nimport { UserInterface } from '../types/userInterface'\n\nexport const testUsername = (username: string) => {\n  if (typeof username !== 'string') {\n    return false\n  }\n  return /^([A-Za-z]+[A-Za-z0-9-_]+)$/.test(username)\n}\n\nexport const getUser = async (instance: AxiosInstance, username: string) => {\n  if (!testUsername(username)) {\n    throw new Error('Invalid username')\n  }\n  const { data } = await instance.get<UserInterface>(\n    `https://twitter.com/i/api/graphql/B-dCk4ph5BZ0UReWK590tw/UserByScreenName?variables={\"screen_name\":\"${username}\",\"withSafetyModeUserFields\":true,\"withSuperFollowsUserFields\":false}`\n  )\n  return data\n}\n\nexport const getUserById = async (\n  instance: AxiosInstance,\n  userId: number | string\n) => {\n  const { data } = await instance.get<UserFromId>(\n    `https://twitter.com/i/api/graphql/WN6Hck-Pwm-YP0uxVj1oMQ/UserByRestIdWithoutResults?variables={\"userId\":\"${userId}\",\"withHighlightedLabel\":true}`\n  )\n  return data\n}\n","import {\n  ClientOptionsInterface,\n  getInitialOptions\n} from './utils/getInitialOptions'\nimport { AxiosInstance } from 'axios'\nimport { getApiClientInstance } from './utils/getApiClientInstance'\nimport { getGuestToken } from './utils/getGuestToken'\nimport { getBearerToken } from './utils/getBearerToken'\nimport { clientSearch, SearchQuery } from './utils/clientSearch'\nimport { ParsedSearchResult, parseSearch } from './utils/parseSearch'\nimport { SearchResults } from './types/searchResults'\nimport { getHashflags, Hashflag } from './utils/getHashflags'\nimport { getUser, getUserById } from './utils/getUser'\nimport { UserInterface } from './types/userInterface'\nimport { UserFromId } from './types/userFromIdInterface'\n\nexport default class TwitterClient {\n  // Options\n  expiredToken: boolean\n  guestToken: string\n  guestTokenUpdatedAt: number\n  bearerToken: string\n  bearerTokenUpdatedAt: number\n  maxRetries: number\n  log: boolean\n  userAgents: string[]\n  language: string\n\n  // Internal\n  userAgent: string = ''\n\n  // Clients\n  apiClient: AxiosInstance\n\n  constructor(options: ClientOptionsInterface = {}) {\n    // options\n    this.setOptions(options)\n\n    // apis\n    this.apiClient = getApiClientInstance()\n    this.getNewUserAgent()\n  }\n\n  setOptions = (options: ClientOptionsInterface) => {\n    const finalOptions = getInitialOptions(options)\n    this.guestToken = finalOptions.guestToken\n    this.bearerToken = finalOptions.bearerToken\n    this.maxRetries = finalOptions.maxRetries\n    this.log = finalOptions.log\n    this.userAgents = finalOptions.userAgents\n  }\n\n  getNewUserAgent = (): string => {\n    const n = this.userAgents.length\n    const sel: string | undefined =\n      this.userAgents[Math.round(Math.random() * n - 1)]\n\n    const selected =\n      sel ||\n      'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:44.0) Gecko/20100101 Firefox/44.0'\n\n    this.userAgent = selected\n    this.apiClient.defaults.headers['User-Agent'] = selected\n    this.say(`Setting new User-Agent: ${selected}`)\n    return selected\n  }\n\n  getBearerToken = async (): Promise<string> => {\n    const token = await getBearerToken(this.userAgent)\n    if (token) {\n      this.setBearerToken(token)\n      return token\n    } else {\n      throw new Error('Token not found.')\n    }\n  }\n\n  getGuestToken = async (): Promise<string> => {\n    const token = await getGuestToken()\n    if (token) {\n      this.setGuestToken(token)\n      return token\n    } else {\n      throw new Error('Token not found.')\n    }\n  }\n\n  setGuestToken = (token: string) => {\n    this.guestToken = token\n    this.apiClient.defaults.headers['x-guest-token'] = this.guestToken\n    this.guestTokenUpdatedAt = Math.floor(Date.now() / 1000)\n    this.say('New guest token setted.')\n  }\n\n  setBearerToken = (token: string) => {\n    this.bearerToken = token\n    this.bearerTokenUpdatedAt = Math.floor(Date.now() / 1000)\n    this.apiClient.defaults.headers.authorization = `Bearer ${this.bearerToken}`\n    this.say('New bearer token setted.')\n  }\n\n  connect = async () => {\n    this.say('Connecting...')\n    await this.getBearerToken()\n    await this.getGuestToken()\n    this.say('Connected to twitter')\n  }\n\n  private say = (message: any) => {\n    if (this.log) {\n      console.log(message)\n    }\n  }\n\n  // Search\n  search = async (\n    query: SearchQuery,\n    maxTweets: number = 100,\n    pageToken?: string\n  ): Promise<ParsedSearchResult> => {\n    this.say('Searching...')\n    const data = await clientSearch(this.apiClient, query, maxTweets, pageToken)\n    const result = parseSearch(data)\n    this.say('Searched tweets')\n    return result\n  }\n\n  searchRaw = async (\n    query: SearchQuery,\n    maxTweets: number = 100,\n    pageToken?: string\n  ): Promise<SearchResults> => {\n    this.say('Searching...')\n    const data = await clientSearch(this.apiClient, query, maxTweets, pageToken)\n    this.say('Searched tweets')\n    return data\n  }\n\n  // Get User\n  getUser = async (username: string): Promise<UserInterface> => {\n    if (typeof username !== 'string') {\n      throw new Error('Username must be string.')\n    }\n    const name = username.replace('@', '')\n    this.say(`Getting user: ${name}`)\n    const data = await getUser(this.apiClient, name)\n    this.say('User OK')\n    return data\n  }\n\n  getUserById = async (userId: string | number): Promise<UserFromId> => {\n    this.say(`Getting user by id: ${userId}`)\n    const data = await getUserById(this.apiClient, userId)\n    this.say('User OK')\n    return data\n  }\n\n  // Get hashflags\n  getHashflags = async (date: string): Promise<Hashflag[]> => {\n    this.say('Getting hashflags...')\n    const data = await getHashflags(date)\n    this.say('Hashflags OK')\n    return data\n  }\n}\n","export const getTweetsFromUsername = async (username: string) => {\n  return username\n}\n\nexport const getTweetsFromUserId = async (\n  userId: number,\n  count: number = 300\n) => {\n  const url = `https://mobile.twitter.com/i/api/graphql/Lya9A5YxHQxhCQJ5IPtm7A/UserTweets?variables={\"userId\":\"${userId}\",\"count\":${count},\"withTweetQuoteCount\":true,\"includePromotedContent\":true,\"withSuperFollowsUserFields\":false,\"withUserResults\":true,\"withBirdwatchPivots\":false,\"withReactionsMetadata\":false,\"withReactionsPerspective\":false,\"withSuperFollowsTweetFields\":false,\"withVoice\":true}`\n  return url\n}\n","/* eslint-disable quotes */\n/* eslint-disable camelcase */\nexport interface SearchResults {\n  globalObjects: GlobalObjects\n  timeline: Timeline\n}\n\nexport interface GlobalObjects {\n  tweets: { [key: string]: TweetValue }\n  users: { [key: string]: UserValue }\n  moments: Broadcasts\n  cards: Broadcasts\n  places: Broadcasts\n  media: Broadcasts\n  broadcasts: Broadcasts\n  topics: Broadcasts\n  lists: Broadcasts\n}\n\nexport interface Broadcasts {}\n\nexport interface TweetValue {\n  created_at: string\n  id: number\n  id_str: string\n  full_text: string\n  truncated: boolean\n  display_text_range: number[]\n  entities: TweetEntities\n  extended_entities?: ExtendedEntities\n  source: string\n  in_reply_to_status_id: number | null\n  in_reply_to_status_id_str: null | string\n  in_reply_to_user_id: number | null\n  in_reply_to_user_id_str: null | string\n  in_reply_to_screen_name: null | string\n  user_id: number\n  user_id_str: string\n  geo: null\n  coordinates: null\n  place: null\n  contributors: null\n  is_quote_status: boolean\n  retweet_count: number\n  favorite_count: number\n  reply_count: number\n  quote_count: number\n  conversation_id: number\n  conversation_id_str: string\n  favorited: boolean\n  retweeted: boolean\n  possibly_sensitive?: boolean\n  possibly_sensitive_editable?: boolean\n  lang: Lang\n  supplemental_language: null\n  self_thread?: SelfThread\n  quoted_status_id?: number\n  quoted_status_id_str?: string\n  quoted_status_permalink?: QuotedStatusPermalink\n}\n\nexport interface TweetEntities {\n  hashtags: Hashtag[]\n  symbols: any[]\n  user_mentions: any[]\n  urls: any[]\n  media?: EntitiesMedia[]\n}\n\nexport interface Hashtag {\n  text: string\n  indices: number[]\n}\n\nexport interface EntitiesMedia {\n  id: number\n  id_str: string\n  indices: number[]\n  media_url: string\n  media_url_https: string\n  url: string\n  display_url: string\n  expanded_url: string\n  type: Type\n  original_info: OriginalInfo\n  sizes: Sizes\n  source_status_id?: number\n  source_status_id_str?: string\n  source_user_id?: number\n  source_user_id_str?: string\n}\n\nexport interface OriginalInfo {\n  width: number\n  height: number\n  focus_rects?: FocusRect[]\n}\n\nexport interface FocusRect {\n  x: number\n  y: number\n  h: number\n  w: number\n}\n\nexport interface Sizes {\n  thumb: Large\n  large: Large\n  small: Large\n  medium: Large\n}\n\nexport interface Large {\n  w: number\n  h: number\n  resize: Resize\n}\n\nexport enum Resize {\n  Crop = 'crop',\n  Fit = 'fit'\n}\n\nexport enum Type {\n  Photo = 'photo',\n  Video = 'video'\n}\n\nexport interface ExtendedEntities {\n  media: ExtendedEntitiesMedia[]\n}\n\nexport interface ExtendedEntitiesMedia {\n  id: number\n  id_str: string\n  indices: number[]\n  media_url: string\n  media_url_https: string\n  url: string\n  display_url: string\n  expanded_url: string\n  type: Type\n  original_info: OriginalInfo\n  sizes: Sizes\n  media_key: string\n  ext_alt_text: null\n  ext_media_availability: EXTMediaAvailability\n  ext_media_color: MediaColor\n  ext: MediaEXT\n  source_status_id?: number\n  source_status_id_str?: string\n  source_user_id?: number\n  source_user_id_str?: string\n  video_info?: VideoInfo\n  additional_media_info?: AdditionalMediaInfo\n}\n\nexport interface AdditionalMediaInfo {\n  monetizable: boolean\n  source_user?: UserValue\n}\n\nexport interface UserValue {\n  id: number\n  id_str: string\n  name: string\n  screen_name: string\n  location: string\n  description: string\n  url: null | string\n  entities: UserEntities\n  protected: boolean\n  followers_count: number\n  fast_followers_count: number\n  normal_followers_count: number\n  friends_count: number\n  listed_count: number\n  created_at: string\n  favourites_count: number\n  utc_offset: null\n  time_zone: null\n  geo_enabled: boolean\n  verified: boolean\n  statuses_count: number\n  media_count: number\n  lang: null\n  contributors_enabled: boolean\n  is_translator: boolean\n  is_translation_enabled: boolean\n  profile_background_color: string\n  profile_background_image_url: null | string\n  profile_background_image_url_https: null | string\n  profile_background_tile: boolean\n  profile_image_url: string\n  profile_image_url_https: string\n  profile_banner_url?: string\n  profile_image_extensions_media_color: MediaColor\n  profile_image_extensions_alt_text: null\n  profile_image_extensions_media_availability: null\n  profile_image_extensions: ProfileExtensions\n  profile_banner_extensions_alt_text?: null\n  profile_banner_extensions_media_availability?: null\n  profile_banner_extensions_media_color?: MediaColor\n  profile_banner_extensions?: ProfileExtensions\n  profile_link_color: string\n  profile_sidebar_border_color: ProfileSidebarBorderColor\n  profile_sidebar_fill_color: ProfileSidebarFillColor\n  profile_text_color: string\n  profile_use_background_image: boolean\n  has_extended_profile: boolean\n  default_profile: boolean\n  default_profile_image: boolean\n  pinned_tweet_ids: number[]\n  pinned_tweet_ids_str: string[]\n  has_custom_timelines: boolean\n  can_dm: null\n  following: null\n  follow_request_sent: null\n  notifications: null\n  muting: null\n  blocking: null\n  blocked_by: null\n  want_retweets: null\n  advertiser_account_type: AdvertiserAccountType\n  advertiser_account_service_levels: string[]\n  profile_interstitial_type: string\n  business_profile_state: AdvertiserAccountType\n  translator_type: TranslatorType\n  withheld_in_countries: any[]\n  followed_by: null\n  ext: UserEXT\n  require_some_consent: boolean\n}\n\nexport enum AdvertiserAccountType {\n  None = 'none',\n  PromotableUser = 'promotable_user'\n}\n\nexport interface UserEntities {\n  description: Description\n  url?: Description\n}\n\nexport interface Description {\n  urls: URL[]\n}\n\nexport interface URL {\n  url: string\n  expanded_url: string\n  display_url: string\n  indices: number[]\n}\n\nexport interface UserEXT {\n  highlightedLabel: HighlightedLabel\n}\n\nexport interface HighlightedLabel {\n  r: HighlightedLabelR\n  ttl: number\n}\n\nexport interface HighlightedLabelR {\n  ok: Broadcasts\n}\n\nexport interface ProfileExtensions {\n  mediaStats: ProfileBannerExtensionsMediaStats\n}\n\nexport interface ProfileBannerExtensionsMediaStats {\n  r: MediaStatsRClass\n  ttl: number\n}\n\nexport interface MediaStatsRClass {\n  missing: null\n}\n\nexport interface MediaColor {\n  palette: Palette[]\n}\n\nexport interface Palette {\n  rgb: RGB\n  percentage: number\n}\n\nexport interface RGB {\n  red: number\n  green: number\n  blue: number\n}\n\nexport enum ProfileSidebarBorderColor {\n  C0Deed = 'C0DEED',\n  Ffffff = 'FFFFFF',\n  The000000 = '000000'\n}\n\nexport enum ProfileSidebarFillColor {\n  Ddeef6 = 'DDEEF6',\n  F5Deb3 = 'F5DEB3',\n  The000000 = '000000'\n}\n\nexport enum TranslatorType {\n  None = 'none',\n  Regular = 'regular'\n}\n\nexport interface MediaEXT {\n  mediaStats: EXTMediaStats\n}\n\nexport interface EXTMediaStats {\n  r: RRClass | REnum\n  ttl: number\n}\n\nexport interface RRClass {\n  ok: Ok\n}\n\nexport interface Ok {\n  viewCount: string\n}\n\nexport enum REnum {\n  Missing = 'Missing'\n}\n\nexport interface EXTMediaAvailability {\n  status: Status\n}\n\nexport enum Status {\n  Available = 'available'\n}\n\nexport interface VideoInfo {\n  aspect_ratio: number[]\n  duration_millis: number\n  variants: Variant[]\n}\n\nexport interface Variant {\n  bitrate?: number\n  content_type: ContentType\n  url: string\n}\n\nexport enum ContentType {\n  ApplicationXMPEGURL = 'application/x-mpegURL',\n  VideoMp4 = 'video/mp4'\n}\n\nexport enum Lang {\n  En = 'en'\n}\n\nexport interface QuotedStatusPermalink {\n  url: string\n  expanded: string\n  display: string\n}\n\nexport interface SelfThread {\n  id: number\n  id_str: string\n}\n\nexport interface Timeline {\n  id: string\n  instructions: Instruction[]\n  responseObjects: ResponseObjects\n}\n\nexport type Instruction = AddEntryInstruction\n\nexport interface AddEntryInstruction {\n  addEntries: AddEntries\n}\n\nexport interface AddEntries {\n  entries: Entry[]\n}\n\nexport interface Entry {\n  entryId: string\n  sortIndex: string\n  content: EntryContent\n}\n\nexport interface EntryContent {\n  timelineModule?: TimelineModule\n  item?: ContentItem\n  operation?: Operation\n}\n\nexport interface ContentItem {\n  content: PurpleContent\n  clientEventInfo: ItemClientEventInfo\n  feedbackInfo: FeedbackInfo\n}\n\nexport interface ItemClientEventInfo {\n  component: Component\n  element: PurpleElement\n  details: Details\n}\n\nexport enum Component {\n  ConversationModule = 'conversation_module',\n  Result = 'result',\n  UserModule = 'user_module'\n}\n\nexport interface Details {\n  timelinesDetails: TimelinesDetails\n}\n\nexport interface TimelinesDetails {\n  controllerData: string\n}\n\nexport enum PurpleElement {\n  Tweet = 'tweet',\n  User = 'user'\n}\n\nexport interface PurpleContent {\n  tweet: ContentTweet\n}\n\nexport interface ContentTweet {\n  id: string\n  displayType: DisplayType\n  highlights?: Highlights\n}\n\nexport enum DisplayType {\n  Tweet = 'Tweet'\n}\n\nexport interface Highlights {\n  textHighlights: TextHighlight[]\n}\n\nexport interface TextHighlight {\n  startIndex: number\n  endIndex: number\n}\n\nexport interface FeedbackInfo {\n  feedbackKeys: FeedbackKey[]\n  displayContext: DisplayContext\n  clientEventInfo: FeedbackInfoClientEventInfo\n}\n\nexport interface FeedbackInfoClientEventInfo {\n  component: Component\n  element: FluffyElement\n  action: Action\n}\n\nexport enum Action {\n  Click = 'click'\n}\n\nexport enum FluffyElement {\n  FeedbackGivefeedback = 'feedback_givefeedback',\n  FeedbackNotcredible = 'feedback_notcredible',\n  FeedbackNotrelevant = 'feedback_notrelevant'\n}\n\nexport interface DisplayContext {\n  reason: Reason\n}\n\nexport enum Reason {\n  ThisTweetSNotHelpful = \"This Tweet's not helpful\"\n}\n\nexport enum FeedbackKey {\n  Givefeedback = 'givefeedback'\n}\n\nexport interface Operation {\n  cursor: Cursor\n}\n\nexport interface Cursor {\n  value: string\n  cursorType: string\n}\n\nexport interface TimelineModule {\n  items: ItemElement[]\n  displayType: string\n  header?: Header\n  footer?: Footer\n  clientEventInfo: TimelineModuleClientEventInfo\n}\n\nexport interface TimelineModuleClientEventInfo {\n  component: Component\n  element: string\n}\n\nexport interface Footer {\n  text: string\n  url: string\n  displayType: string\n}\n\nexport interface Header {\n  text: string\n  sticky: boolean\n  displayType: string\n}\n\nexport interface ItemElement {\n  entryId: string\n  item: ItemItem\n}\n\nexport interface ItemItem {\n  content: FluffyContent\n  clientEventInfo: ItemClientEventInfo\n  feedbackInfo?: FeedbackInfo\n}\n\nexport interface FluffyContent {\n  user?: ContentUser\n  tweet?: ContentTweet\n}\n\nexport interface ContentUser {\n  id: string\n  displayType: string\n}\n\nexport interface ResponseObjects {\n  feedbackActions: FeedbackActions\n}\n\nexport interface FeedbackActions {\n  givefeedback: Givefeedback\n  notrelevant: Givefeedback\n  notcredible: Givefeedback\n}\n\nexport interface Givefeedback {\n  feedbackType: string\n  prompt: string\n  confirmation: string\n  childKeys?: string[]\n  hasUndoAction: boolean\n  confirmationDisplayType: string\n  clientEventInfo: FeedbackInfoClientEventInfo\n  icon?: string\n}\n"],"names":["defaultUserAgents","defaultOptions","guestToken","bearerToken","maxRetries","log","userAgents","getInitialOptions","options","finalOptions","Object","entries","forEach","index","getApiClientInstance","axios","create","headers","Host","origin","Accept","DNT","Connection","Pragma","TE","getGuestToken","get","withCredentials","referer","response","tokenMatch","data","match","token","getBearerToken","userAgent","buildSearchQueryString","query","q","terms","undefined","dateFrom","dateTo","minReplies","minRetweets","minFaves","lang","getSearchParams","maxTweets","pageToken","params","include_profile_interstitial_type","include_blocking","include_blocked_by","include_followed_by","include_want_retweets","include_mute_edge","include_can_dm","include_can_media_tag","skip_status","cards_platform","include_cards","include_ext_alt_text","include_quote_count","include_reply_count","tweet_mode","include_entities","include_user_entities","include_ext_media_color","include_ext_media_availability","send_error_codes","simple_quoted_tweet","count","query_source","pc","spelling_corrections","ext","cursor","getSearchHeaders","Referer","clientSearch","instance","searchParmas","queryUrl","getNextToken","d","instructions","timeline","length","lastInstruction","addEntries","getTokenFromAddEntry","entry","last","content","operation","value","parseSearch","result","users","globalObjects","tweets","nextToken","hashflagHeaders","Origin","getHashflags","date","testUsername","username","test","getUser","Error","getUserById","userId","TwitterClient","n","sel","Math","round","random","selected","apiClient","defaults","say","setBearerToken","setGuestToken","guestTokenUpdatedAt","floor","Date","now","bearerTokenUpdatedAt","authorization","message","console","name","replace","setOptions","getNewUserAgent","getTweetsFromUsername","getTweetsFromUserId","url","Resize","Type","AdvertiserAccountType","ProfileSidebarBorderColor","ProfileSidebarFillColor","TranslatorType","REnum","Status","ContentType","Lang","Component","PurpleElement","DisplayType","Action","FluffyElement","Reason","FeedbackKey"],"mappings":"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"}